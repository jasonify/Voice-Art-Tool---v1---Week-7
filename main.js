const canvas=document.getElementById("canvas"),width=canvas.width=window.innerWidth,height=canvas.height=window.innerHeight,context=canvas.getContext("2d"),globalWidth=width,globalHeight=height,$layers=$(".layers"),$status=$(".status");var itemsDrawn={},listening=!0,started=!1,BaseItem=function(){},BaseItemProps={type:"circle",position:{x:30,y:20}},ExampleCricleDimensions={radius:3},ExampleSquareDimensions={width:10,height:10},itemsOnScreen=[];const drawRectangle=function(e){context.fillStyle="#000000",context.fillRect(e.position.x,e.position.y,e.width,e.height)},drawOval=function(e){const t=e.radius,n=e.position.x,o=e.position.y;context.beginPath(),context.ellipse(n,o,t,t,9*Math.PI/180,0,2*Math.PI),context.fillStyle="#8ED6FF",context.fill(),context.lineWidth=5,context.strokeStyle="black",context.stroke()},clearScreen=function(){context.clearRect(0,0,width,height)},drawItem=function(e){switch(e.type){case"cloner":break;case"rectangle":drawRectangle(e);break;case"oval":drawOval(e);break;default:console.log("Unreconigzed item type?",e.type)}},render=function(){clearScreen(),_.each(itemsOnScreen,function(e){drawItem(e)}),setTimeout(function(){requestAnimationFrame(render)},1e3/60)};render();const getRectangle=function(e,t,n,o){const a={type:"rectangle",width:n,height:o,position:{x:e,y:t}};return a},getOVal=function(e,t,n){const o={type:"oval",radius:n,position:{x:e,y:t}};return o};var SpeechRecognition=SpeechRecognition||webkitSpeechRecognition,SpeechGrammarList=SpeechGrammarList||webkitSpeechGrammarList,SpeechRecognitionEvent=SpeechRecognitionEvent||webkitSpeechRecognitionEvent,colors=["create","clear","square","triangle","oval","circle","start","stop"],grammar="#JSGF V1.0; grammar commands; public <commands> = "+colors.join(" | ")+" ;",prevLast=-1;const getRecognized=function(){var e=new SpeechRecognition,t=new SpeechGrammarList;return t.addFromString(grammar,1),e.grammars=t,e.lang="en-US",e.interimResults=!0,e.onresult=function(e){console.log("event results",e.results);var t=e.results.length-1;prevLast=t;var n=e.results[t][0].transcript,o=e.results[t].isFinal;if(console.log("isFinal",o),listening||"start"!==n||(listening=!0),listening){if($status.text("Procesing... potential command: "+n),!o)return void console.log("Not final:",n);if(n){console.log("word = ",n),n=n.toLowerCase().trim();var a;switch(n){case"start":listening=!0,$status.text('Started. Say "stop" to pause or give a command.');break;case"stop":listening=!1,$status.text('Say "start" to engage again.');break;case"circle":case"oval":$status.text("Drawing: "+n);const i=20+300*Math.random();a=getOVal(globalWidth*Math.random(),globalHeight*Math.random(),i),itemsOnScreen.push(a);break;case"square":const r=20+300*Math.random();a=getRectangle(globalWidth*Math.random(),globalHeight*Math.random(),r,r),itemsOnScreen.push(a),$status.text("Drawing: "+n);break;case"clear":$status.text("Clearing"),itemsOnScreen=[]}}console.log("Confidence: "+e.results[0][0].confidence),$layers.empty(),_.each(itemsDrawn,function(e,t){$layers.append($("<div>"+e+"--"+t+"</div>"))})}},e.onstart=function(){started=!0,console.log("Started..............................................................")},e.onspeechend=function(){e.stop(),started=!1,console.log("ended speech")},e.onnomatch=function(e){console.log("Could not find that word")},e.onerror=function(t){console.log("--------------------crash-------------------",t.error),e=getRecognized(),started=!1},e};var recognition=getRecognized(),interval=setInterval(function(){started||(recognition.start(),console.log("Ready to receive a  command."))},1e3);